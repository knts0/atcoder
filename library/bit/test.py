# https://qiita.com/7shi/items/41d262ca11ea16d85abc
# 
#  論理積 &
bin(0b10010010 & 0b10100111)   # '0b10000010'

# 論理和 |
bin(0b10010010 | 0b10100111)   # '0b10110111'

# 排他的論理和
bin(0b10010010 ^ 0b10100111)   # '0b110101'
bin(0b10010010 ^ 0b10100111 ^ 0b10100111)   # a ^ b ^ b → a 同じ値で2回XORすると元の値に戻る
bin(0b10010010 ^ 0b10100111 ^ 0b10010010)   # a ^ b ^ a → b 元の値が消える

# 反転
~1   # -2

# シフトとの併用
bin((0b101110 >> 2) & 0b11)   # '0b11'

# NOTとの併用
# NOTの計算結果をANDでマスクすれば、桁数を限定してマイナスを排除できます。
bin(~1 & 0b1111)   # '0b1110'

# ビットの合成
bin((0b101 << 3) | 0b110)   # '0b101110'
bin(0b101101 & 0b111000 | 0b011)   # '0b101011' 合成したい箇所に既に別の値が入っている場合は、先にANDで消してからORします。

# 割り算のあまり
# 『2^n による割り算の余り』は『2^(n-1)とのAND』に等しいです。
# x % (2 ** n) == x & ((2 ** n) - 1
bin(0b110101 & 0b111)   # '0b101'
bin(0b110101 % 8)   # '0b101'

